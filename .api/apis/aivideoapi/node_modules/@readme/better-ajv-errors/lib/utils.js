"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.notUndefined = exports.isRequiredError = exports.isEnumError = exports.isAnyOfError = exports.getSiblings = exports.getErrors = exports.getChildren = exports.concatAll = void 0;
// Basic
var eq = function eq(x) {
  return function (y) {
    return x === y;
  };
};
var not = function not(fn) {
  return function (x) {
    return !fn(x);
  };
};
var getValues = function getValues(o) {
  return Object.values(o);
};
var notUndefined = exports.notUndefined = function notUndefined(x) {
  return x !== undefined;
};

// Error
var isXError = function isXError(x) {
  return function (error) {
    return error.keyword === x;
  };
};
var isRequiredError = exports.isRequiredError = isXError('required');
var isAnyOfError = exports.isAnyOfError = isXError('anyOf');
var isEnumError = exports.isEnumError = isXError('enum');
var getErrors = exports.getErrors = function getErrors(node) {
  return node && node.errors || [];
};

// Node
var getChildren = exports.getChildren = function getChildren(node) {
  return node && getValues(node.children) || [];
};
var getSiblings = exports.getSiblings = function getSiblings(parent /*: Node */) {
  return function /*: $ReadOnlyArray<Node> */
  (node /*: Node */) {
    return getChildren(parent).filter(not(eq(node)));
  };
};
var concatAll = exports.concatAll = /* ::<T> */

function concatAll(xs /*: $ReadOnlyArray<T> */) {
  return function /* : $ReadOnlyArray<T> */
  (ys /* : $ReadOnlyArray<T> */) {
    return ys.reduce(function (zs, z) {
      return zs.concat(z);
    }, xs);
  };
};